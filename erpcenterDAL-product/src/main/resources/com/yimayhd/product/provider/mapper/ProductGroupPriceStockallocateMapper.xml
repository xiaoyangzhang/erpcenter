<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yihg.product.dao.ProductGroupPriceStockallocateMapper" >
  <resultMap id="BaseResultMap" type="com.yihg.product.po.ProductGroupPriceStockallocate" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="price_id" property="priceId" jdbcType="INTEGER" />
    <result column="supplier_id" property="supplierId" jdbcType="INTEGER" />
    <result column="stock_num" property="stockNum" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, price_id, supplier_id, stock_num, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from product_group_price_stockallocate
    where price_id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from product_group_price_stockallocate
    where price_id = #{priceId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yihg.product.po.ProductGroupPriceStockallocate" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product_group_price_stockallocate (price_id, supplier_id, stock_num, 
      create_time)
    values (#{priceId,jdbcType=INTEGER}, #{supplierId,jdbcType=INTEGER}, #{stockNum,jdbcType=INTEGER}, 
      #{createTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.yihg.product.po.ProductGroupPriceStockallocate" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product_group_price_stockallocate
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="priceId != null" >
        price_id,
      </if>
      <if test="supplierId != null" >
        supplier_id,
      </if>
      <if test="stockNum != null" >
        stock_num,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="priceId != null" >
        #{priceId,jdbcType=INTEGER},
      </if>
      <if test="supplierId != null" >
        #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="stockNum != null" >
        #{stockNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yihg.product.po.ProductGroupPriceStockallocate" >
    update product_group_price_stockallocate
    <set >
      <if test="priceId != null" >
        price_id = #{priceId,jdbcType=INTEGER},
      </if>
      <if test="supplierId != null" >
        supplier_id = #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="stockNum != null" >
        stock_num = #{stockNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yihg.product.po.ProductGroupPriceStockallocate" >
    update product_group_price_stockallocate
    set price_id = #{priceId,jdbcType=INTEGER},
      supplier_id = #{supplierId,jdbcType=INTEGER},
      stock_num = #{stockNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateStockByPriceIdAndSupplierId" parameterType="java.lang.Integer" >
    update product_group_price_stockallocate
    set stock_num = stock_num - #{decreaseStock,jdbcType=INTEGER}
    where price_id = #{priceId,jdbcType=INTEGER} and supplier_id = #{supplierId,jdbcType=INTEGER} and stock_num - #{decreaseStock,jdbcType=INTEGER} >= 0
  </update>
</mapper>