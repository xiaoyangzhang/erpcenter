<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yihg.product.dao.ProductGroupPriceMapper" >
  <resultMap id="BaseResultMap" type="com.yihg.product.po.ProductGroupPrice" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="group_id" property="groupId" jdbcType="INTEGER" />
    <result column="group_date" property="groupDate" jdbcType="DATE" />
    <result column="group_date_to" property="groupDateTo" jdbcType="DATE" />
    <result column="week_day" property="weekDay" jdbcType="INTEGER" />
    <result column="price_suggest_adult" property="priceSuggestAdult" jdbcType="REAL" />
    <result column="price_suggest_child" property="priceSuggestChild" jdbcType="REAL" />
    <result column="price_suggest_room_spread" property="priceSuggestRoomSpread" jdbcType="REAL" />
    <result column="price_settlement_adult" property="priceSettlementAdult" jdbcType="REAL" />
    <result column="price_settlement_child" property="priceSettlementChild" jdbcType="REAL" />
    <result column="price_settlement_roome_spread" property="priceSettlementRoomeSpread" jdbcType="REAL" />

    <result column="price_cost_adult" property="priceCostAdult" jdbcType="REAL" />
    <result column="price_cost_child" property="priceCostChild" jdbcType="REAL" />
    <result column="price_cost_room_spread" property="priceCostRoomSpread" jdbcType="REAL" />

    <result column="days_register_begin" property="daysRegisterBegin" jdbcType="INTEGER" />
    <result column="days_register_finish" property="daysRegisterFinish" jdbcType="INTEGER" />
    <result column="stock_count" property="stockCount" jdbcType="INTEGER" />
    <result column="receive_count" property="receiveCount" jdbcType="INTEGER" />
    <result column="is_memeber_allocate" property="isMemeberAllocate" jdbcType="TINYINT" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
  </resultMap>
    <resultMap id="PriceViewMap" type="com.yihg.product.po.PriceView" >
        <result column="product_id" property="productId" jdbcType="INTEGER" />
        <result column="group_id" property="groupId" jdbcType="INTEGER" />
        <result column="price_id" property="priceId" jdbcType="INTEGER" />
        <result column="group_date" property="groupDate" jdbcType="DATE" />
        <result column="group_date_to" property="groupDateTo" jdbcType="DATE" />
        <result column="price_suggest_adult" property="priceSuggestAdult" jdbcType="REAL" />
        <result column="price_suggest_child" property="priceSuggestChild" jdbcType="REAL" />
        <result column="price_cost_adult" property="priceCostAdult" jdbcType="REAL" />
        <result column="price_cost_child" property="priceCostChild" jdbcType="REAL" />
        <result column="price_settlement_adult" property="priceSettlementAdult" jdbcType="REAL" />
        <result column="price_settlement_child" property="priceSettlementChild" jdbcType="REAL" />
        <result column="stock_count" property="stockCount" jdbcType="INTEGER" />
        <result column="receive_count" property="receiveCount" jdbcType="INTEGER" />
        <result column="days_register_begin" property="daysRegisterBegin" jdbcType="INTEGER" />
        <result column="days_register_finish" property="daysRegisterFinish" jdbcType="INTEGER" />
    </resultMap>
    <resultMap id="PriceMapExt" type="com.yihg.product.vo.StockStaticsResultItemVo" >
        <result column="group_date" property="groupDate" jdbcType="DATE" />
        <result column="stock_count" property="stockCount" jdbcType="INTEGER" />
        <result column="receive_count" property="receiveCount" jdbcType="INTEGER" />
        <result column="left_count" property="leftCount" jdbcType="INTEGER" />
    </resultMap>
  <sql id="Base_Column_List" >
    id, group_id, group_date, week_day, price_suggest_adult, price_suggest_child, price_suggest_room_spread, 
    price_settlement_adult, price_settlement_child, price_settlement_roome_spread, price_cost_adult,price_cost_child,price_cost_room_spread,days_register_begin, 
    days_register_finish, stock_count, receive_count, (CASE(SELECT COUNT(*) FROM product_group_price_stockallocate s WHERE s.price_id=id) WHEN 0 THEN 0 ELSE 1 END) AS is_memeber_allocate,state, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
  SELECT
    t.id,
    t.group_id,
    t.group_date,
    t.week_day,
    t.price_suggest_adult,
    t.price_suggest_child,
    t.price_suggest_room_spread,
    t.price_settlement_adult,
    t.price_settlement_child,
    t.price_settlement_roome_spread,
    t.price_cost_adult,
    t.price_cost_child,
    t.price_cost_room_spread,
    t.days_register_begin,
    t.days_register_finish,
    t.stock_count,
    t.receive_count,
    (
      CASE
        (SELECT
          COUNT(*)
        FROM
          product_group_price_stockallocate s
        WHERE s.price_id = t.id)
        WHEN 0
        THEN 0
        ELSE 1
      END
    ) AS is_memeber_allocate,
    t.state,
    t.create_time
    from product_group_price t
    where t.id = #{id,jdbcType=INTEGER} and t.state = 1
  </select>
  <select id="selectByGroupId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    SELECT
    t.id,
    t.group_id,
    t.group_date,
    t.group_date_to,
    t.week_day,
    t.price_suggest_adult,
    t.price_suggest_child,
    t.price_suggest_room_spread,
    t.price_settlement_adult,
    t.price_settlement_child,
    t.price_settlement_roome_spread,
    t.price_cost_adult,
    t.price_cost_child,
    t.price_cost_room_spread,
    t.days_register_begin,
    t.days_register_finish,
    t.stock_count,
    t.receive_count,
    (
    CASE
    (SELECT
    COUNT(*)
    FROM
    product_group_price_stockallocate s
    WHERE s.price_id = t.id)
    WHEN 0
    THEN 0
    ELSE 1
    END
    ) AS is_memeber_allocate,
    t.state,
    t.create_time
    from product_group_price t
    where t.group_id = #{groupId,jdbcType=INTEGER} and t.state = 1
    <if test="year != null" >
      and date_format(t.group_date,'%Y-%m')=CONCAT(#{year}, '-' , #{month})
    </if>

  </select>
  <select id="selectDateByProductId" resultType="java.util.Date" parameterType="java.lang.Integer" >
    select
    t.group_date
    from product_group_price t, product_group g, product_info p
    where t.group_id=g.id and g.product_id=p.id and p.id = #{productId,jdbcType=INTEGER} and p.state != -1 and g.state != -1 and t.state != -1
  </select>
  <select id="selectPricesByGroupId" resultMap="PriceViewMap" >
    select
    g.product_id, g.id as group_id, t.id as price_id, t.group_date,t.group_date_to, t.price_suggest_adult, t.price_suggest_child,
    t.`price_cost_adult`,t.`price_cost_child`,t.`price_settlement_adult`,t.`price_settlement_child`,
    t.stock_count, t.receive_count, t.days_register_begin, t.days_register_finish
    from product_group_price t, product_group g
    where t.group_id=g.id and g.id = #{groupId,jdbcType=INTEGER} and g.state != -1 and t.state != -1
    <![CDATA[AND ((t.group_date >= #{startDate} AND t.group_date < #{endDate}) OR (t.group_date_to>=#{startDate} AND t.group_date_to<#{endDate}))]]>
  </select>
  <select id="selectDatesByProductId" resultType="java.lang.String">
    SELECT DISTINCT p.group_date FROM product_group g ,product_group_price p WHERE
    g.id = p.group_id AND g.product_id = #{productId,jdbcType=INTEGER} AND
    g.state=1 AND p.state = 1
    <if test="groupDate != null and groupDate!=''">
      <![CDATA[ AND p.group_date >= #{groupDate,jdbcType=VARCHAR}]]>
    </if>
    ORDER BY p.group_date DESC LIMIT 0,5
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    update product_group_price set state = -1
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yihg.product.po.ProductGroupPrice" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product_group_price (group_id, group_date, week_day,
    price_suggest_adult, price_suggest_child, price_suggest_room_spread,
    price_settlement_adult, price_settlement_child, price_settlement_roome_spread,
    days_register_begin, days_register_finish,
    stock_count, receive_count, is_memeber_allocate, create_time
    )
    values (#{groupId,jdbcType=INTEGER}, #{groupDate,jdbcType=DATE}, #{weekDay,jdbcType=INTEGER},
    #{priceSuggestAdult,jdbcType=REAL}, #{priceSuggestChild,jdbcType=REAL}, #{priceSuggestRoomSpread,jdbcType=REAL},
    #{priceSettlementAdult,jdbcType=REAL}, #{priceSettlementChild,jdbcType=REAL}, #{priceSettlementRoomeSpread,jdbcType=REAL},
    #{daysRegisterBegin,jdbcType=INTEGER}, #{daysRegisterFinish,jdbcType=INTEGER},
    #{stockCount,jdbcType=INTEGER}, #{receiveCount,jdbcType=INTEGER}, #{isMemeberAllocate,jdbcType=TINYINT}, #{createTime,jdbcType=BIGINT}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.yihg.product.po.ProductGroupPrice" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product_group_price
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="groupDate != null" >
        group_date,
      </if>
      <if test="groupDateTo != null" >
        group_date_to,
      </if>
      <if test="weekDay != null" >
        week_day,
      </if>
      <if test="priceSuggestAdult != null" >
        price_suggest_adult,
      </if>
      <if test="priceSuggestChild != null" >
        price_suggest_child,
      </if>
      <if test="priceSuggestRoomSpread != null" >
        price_suggest_room_spread,
      </if>
      <if test="priceSettlementAdult != null" >
        price_settlement_adult,
      </if>
      <if test="priceSettlementChild != null" >
        price_settlement_child,
      </if>
      <if test="priceCostRoomSpread != null" >
        price_settlement_roome_spread,
      </if>
      <if test="priceCostAdult != null" >
        price_cost_adult,
      </if>
      <if test="priceCostChild != null" >
        price_cost_child,
      </if>
      <if test="priceCostRoomSpread != null" >
        price_cost_room_spread,
      </if>
      <if test="daysRegisterBegin != null" >
        days_register_begin,
      </if>
      <if test="daysRegisterFinish != null" >
        days_register_finish,
      </if>
      <if test="stockCount != null" >
        stock_count,
      </if>
      <if test="receiveCount != null" >
        receive_count,
      </if>
      <if test="isMemeberAllocate != null" >
        is_memeber_allocate,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="groupDate != null" >
        #{groupDate,jdbcType=DATE},
      </if>
      <if test="groupDateTo != null" >
        #{groupDateTo,jdbcType=DATE},
      </if>
      <if test="weekDay != null" >
        #{weekDay,jdbcType=INTEGER},
      </if>
      <if test="priceSuggestAdult != null" >
        #{priceSuggestAdult,jdbcType=REAL},
      </if>
      <if test="priceSuggestChild != null" >
        #{priceSuggestChild,jdbcType=REAL},
      </if>
      <if test="priceSuggestRoomSpread != null" >
        #{priceSuggestRoomSpread,jdbcType=REAL},
      </if>
      <if test="priceSettlementAdult != null" >
        #{priceSettlementAdult,jdbcType=REAL},
      </if>
      <if test="priceSettlementChild != null" >
        #{priceSettlementChild,jdbcType=REAL},
      </if>
      <if test="priceSettlementRoomeSpread != null" >
        #{priceSettlementRoomeSpread,jdbcType=REAL},
      </if>
      <if test="priceCostAdult != null" >
        #{priceCostAdult,jdbcType=REAL},
      </if>
      <if test="priceCostChild != null" >
        #{priceCostChild,jdbcType=REAL},
      </if>
      <if test="priceCostRoomSpread != null" >
        #{priceCostRoomSpread,jdbcType=REAL},
      </if>
      <if test="daysRegisterBegin != null" >
        #{daysRegisterBegin,jdbcType=INTEGER},
      </if>
      <if test="daysRegisterFinish != null" >
        #{daysRegisterFinish,jdbcType=INTEGER},
      </if>
      <if test="stockCount != null" >
        #{stockCount,jdbcType=INTEGER},
      </if>
      <if test="receiveCount != null" >
        #{receiveCount,jdbcType=INTEGER},
      </if>
      <if test="isMemeberAllocate != null" >
        #{isMemeberAllocate,jdbcType=TINYINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yihg.product.po.ProductGroupPrice" >
    update product_group_price
    <set >
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="groupDate != null" >
        group_date = #{groupDate,jdbcType=DATE},
      </if>
      <if test="groupDateTo != null" >
        group_date_to = #{groupDateTo,jdbcType=DATE},
      </if>
      <if test="weekDay != null" >
        week_day = #{weekDay,jdbcType=INTEGER},
      </if>
      <if test="priceSuggestAdult != null" >
        price_suggest_adult = #{priceSuggestAdult,jdbcType=REAL},
      </if>
      <if test="priceSuggestChild != null" >
        price_suggest_child = #{priceSuggestChild,jdbcType=REAL},
      </if>
      <if test="priceSuggestRoomSpread != null" >
        price_suggest_room_spread = #{priceSuggestRoomSpread,jdbcType=REAL},
      </if>
      <if test="priceSettlementAdult != null" >
        price_settlement_adult = #{priceSettlementAdult,jdbcType=REAL},
      </if>
      <if test="priceSettlementChild != null" >
        price_settlement_child = #{priceSettlementChild,jdbcType=REAL},
      </if>
      <if test="priceSettlementRoomeSpread != null" >
        price_settlement_roome_spread = #{priceSettlementRoomeSpread,jdbcType=REAL},
      </if>
      <if test="priceCostAdult != null" >
        price_cost_adult = #{priceCostAdult,jdbcType=REAL},
      </if>
      <if test="priceCostChild != null" >
        price_cost_child = #{priceCostChild,jdbcType=REAL},
      </if>
      <if test="priceCostRoomSpread != null" >
        price_cost_room_spread = #{priceCostRoomSpread,jdbcType=REAL},
      </if>
      <if test="daysRegisterBegin != null" >
        days_register_begin = #{daysRegisterBegin,jdbcType=INTEGER},
      </if>
      <if test="daysRegisterFinish != null" >
        days_register_finish = #{daysRegisterFinish,jdbcType=INTEGER},
      </if>
      <if test="stockCount != null" >
        stock_count = #{stockCount,jdbcType=INTEGER},
      </if>
      <if test="receiveCount != null" >
        receive_count = #{receiveCount,jdbcType=INTEGER},
      </if>
      <if test="isMemeberAllocate != null" >
        is_memeber_allocate = #{isMemeberAllocate,jdbcType=TINYINT},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yihg.product.po.ProductGroupPrice" >
    update product_group_price
    set group_id = #{groupId,jdbcType=INTEGER},
      group_date = #{groupDate,jdbcType=DATE},
      week_day = #{weekDay,jdbcType=INTEGER},
      price_suggest_adult = #{priceSuggestAdult,jdbcType=REAL},
      price_suggest_child = #{priceSuggestChild,jdbcType=REAL},
      price_suggest_room_spread = #{priceSuggestRoomSpread,jdbcType=REAL},
      price_settlement_adult = #{priceSettlementAdult,jdbcType=REAL},
      price_settlement_child = #{priceSettlementChild,jdbcType=REAL},
      price_settlement_roome_spread = #{priceSettlementRoomeSpread,jdbcType=REAL},
      days_register_begin = #{daysRegisterBegin,jdbcType=INTEGER},
      days_register_finish = #{daysRegisterFinish,jdbcType=INTEGER},
      stock_count = #{stockCount,jdbcType=INTEGER},
      receive_count = #{receiveCount,jdbcType=INTEGER},
      is_memeber_allocate = #{isMemeberAllocate,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="increaseStockCount" parameterType="java.lang.Integer" >
    update product_group_price
    set
      receive_count = receive_count + #{increaseCount,jdbcType=INTEGER}
    where id = #{priceId,jdbcType=INTEGER} and stock_count >= receive_count + #{increaseCount,jdbcType=INTEGER} and receive_count + #{increaseCount,jdbcType=INTEGER} >= 0
  </update>
  <select id="getStockStatics" resultMap="PriceMapExt">
  	SELECT gp.group_date,SUM(gp.stock_count) stock_count,SUM(gp.receive_count) receive_count
	FROM `product_group_price` gp,`product_group`g
	WHERE g.`id`=gp.`group_id` AND g.product_id=#{productId}  AND g.state=1 AND gp.state=1 AND <![CDATA[gp.group_date>#{fromDate}]]> AND <![CDATA[gp.group_date<#{toDate} ]]>
	GROUP BY gp.group_date 
  </select>
  <select id="selectByGroupIdAndDateSpan" resultMap="BaseResultMap">
  	SELECT * 
	FROM product_group_price 
	WHERE group_id=#{groupId} AND <![CDATA[group_date>=#{startTime} AND group_date<=#{endTime}]]>
  </select>
  <select id="selectByGroupIdAndGroupDate" resultMap="BaseResultMap">
  	SELECT * 
	FROM product_group_price 
	WHERE group_id=#{groupId} AND group_date=#{groupDate}
  </select>
  <select id="selectProductGroupByProduct" resultType="java.lang.Integer">
  	SELECT   SUM(ifnull(price.`stock_count`,0)) planedPersonCount
  	 FROM `product_info` info LEFT JOIN  `product_group` pg ON info.`id`=pg.`product_id` JOIN `product_group_price` price ON pg.`id`=price.`group_id` 
  	where 1=1 
  	<if test="parameter.productBrandId!=null and parameter.productBrandId!=''">
  	and  info.brand_id=#{parameter.productBrandId}</if> 
  	<if test="parameter.productId!=null and parameter.productId!=''">
  	and  info.id=#{parameter.productId}</if> 
  	
  </select>
   <update id="updateByGroupId" parameterType="java.lang.Integer"  >
  	UPDATE `product_group_price` price   SET price.state=-1  WHERE price.group_id=#{groupId}
  </update> 
  
  <insert id="copyPrices">
  	INSERT INTO product_group_price(group_id, group_date, group_date_to,
    price_cost_adult, price_cost_child, price_settlement_adult, price_settlement_child,state,create_time)
    SELECT #{toGroupId},group_date,group_date_to,price_cost_adult, price_cost_child, price_settlement_adult, 
    price_settlement_child, 1,create_time
    FROM product_group_price WHERE state=1 AND group_id=#{fromGroupId}
  </insert>
  <delete id="deleteByGroupIdList">
  	delete from product_group_price where group_id in 
 	<foreach item="item" index="index" collection="groupIdList" open="("
		separator="," close=")">
		#{item}
	</foreach>
  </delete>
  <select id="selectMinPriceByProductIdAndDate" resultType="java.util.HashMap">
  	SELECT pg.product_Id productId,MIN(price_suggest_adult) adultPrice,MIN(price_suggest_child) childPrice
     FROM `product_group` pg INNER JOIN `product_group_price` pgp ON pg.id=pgp.group_id
     WHERE pg.product_id IN 
     <foreach collection="list" item="item" open="(" separator="," close=")">
     	#{item}
     </foreach>
     AND (group_date<![CDATA[>=]]>#{groupDate,jdbcType=DATE} or
     (group_date<![CDATA[<=]]>#{groupDate,jdbcType=DATE} and group_date_to<![CDATA[>=]]>#{groupDate,jdbcType=DATE}) )
     GROUP BY pg.product_id
  </select>
  
    <select id="selectPricesByGroupId2" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  		SELECT * FROM `product_group_price` t where t.group_id=#{groupId,jdbcType=INTEGER}  and t.state=1   
  	</select>
  	
 	<update id="deleteByGroupIdNotInIds" >
		UPDATE `product_group_price` SET  state=-1  
		where  group_id = ${groupId} 
		<if test="notIds != null and notIds != ''">
			and id not in  (${notIds})
		</if>
	</update>
	
	<select id="getPriceByPidAndUserIdAndDate" resultMap="BaseResultMap">
		SELECT * FROM `product_group_price` t WHERE t.group_id IN
		(SELECT group_id FROM `product_group_seller` WHERE biz_id=#{bizId,jdbcType=INTEGER} AND product_id=#{productId,jdbcType=INTEGER} AND operator_id=#{operatorId,jdbcType=INTEGER})
	    AND t.group_date<![CDATA[>=]]>#{date,jdbcType=DATE}
	    AND t.group_date_to<![CDATA[<=]]>#{date,jdbcType=DATE}
    </select>
  
  
</mapper>